#!/usr/bin/env bash

common_settings() {
    echo "Setting common settings for Yabai"
    yabai -m config external_bar all:38:0
    # yabai -m config window_gap 20
    yabai -m config window_gap 5
    yabai -m config mouse_follows_focus on
    # yabai -m config focus_follows_mouse autofocus
    yabai -m config window_placement second_child
    yabai -m config window_opacity on
    yabai -m config active_window_opacity 1.0
    yabai -m config normal_window_opacity 1.0
    yabai -m config window_opacity_duration 0.1
    # yabai -m config window_animation_duration 0.2
    yabai -m config window_shadow on
}

signals() {
    yabai -m signal --add event=display_added action="sh ~/.config/yabai/yabairc update_all_spaces"
    yabai -m signal --add event=display_removed action="sh ~/.config/yabai/yabairc update_all_spaces"
    yabai -m signal --add event=display_resized action="sh ~/.config/yabaiyabairc update_all_spaces"
    yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
    yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
    yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
    # https://github.com/koekeishiya/yabai/issues/1916
    # yabai -m signal --add event=window_focused action="yabai -m window recent --opacity 0.8; yabai -m window --opacity 0.0"
    yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
    sudo /opt/homebrew/bin/yabai --load-sa
}

set_space_to_bsp() {
    echo "Setting space $1 to bsp layout"
    yabai -m space $1 --layout bsp
    # yabai -m space $1 --padding abs:10:10:10:10
    yabai -m space $1 --padding abs:0:0:0:0
}

set_space_to_webdev() {
    set_space_to_bsp $1
    echo "Setting space $1 to webdev layout"
    browser_id=$(yabai -m query --windows --space $1 | jq '.[] | select(.app == "Safari") | .id')
    nvim_id=$(yabai -m query --windows --space $1 | jq '.[] | select(.title|endswith("NVIM")) | .id')
    if [ -z "$nvim_id" ]; then
        nvim_id="first"
    fi
    yabai -m space $1 --balance
    yabai -m window $browser_id --swap last
    yabai -m window $nvim_id --focus
    yabai -m window $nvim_id --ratio abs:0.80
    yabai -m window $browser_id --ratio abs:0.75
}

set_space_to_stack() {
    echo "Setting space $1 to stacked layout"
    yabai -m space $1 --layout stack
    yabai -m space $1 --padding abs:0:0:0:0
}

update_all_spaces() {
    echo "Updating all spaces on all displays"
    display_list=$(yabai -m query --displays)
    display_count=$(echo $display_list | jq ". | length")
    echo d_count $display_count
    for ((d = 0; d < $display_count; d++)); do
        display_width=$(echo $display_list | jq ".[$d].frame.w" | awk '{printf("%d\n", $0)}')
        space_list=$(echo $display_list | jq ".[$d].spaces")
        space_count=$(echo $space_list | jq ". | length")
        echo s_count $space_count
        for ((s = 0; s < $space_count; s++)); do
            space_number=$(echo $space_list | jq ".[$s]")
            if [ "$display_width" -gt 1800 ]; then
                # External monitor
                set_space_to_bsp $space_number
            else
                # Laptop screen
                set_space_to_stack $space_number
            fi
        done

    done

}

if [ "$1" = "update_all_spaces" ]; then
    update_all_spaces
elif [ "$1" = "set_space_to_bsp" ]; then
    set_space_to_bsp "$2"
elif [ "$1" = "set_space_to_webdev" ]; then
    set_space_to_webdev "$2"
elif [ "$1" = "set_space_to_stack" ]; then
    set_space_to_stack "$2"
else
    echo "Loading full Yabai configuration"
    common_settings
    update_all_spaces
    signals
fi
